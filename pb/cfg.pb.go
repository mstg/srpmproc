// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.24.0-devel
// 	protoc        v3.14.0
// source: cfg.proto

package srpmprocpb

import (
	proto "github.com/golang/protobuf/proto"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// This is a compile-time assertion that a sufficiently up-to-date version
// of the legacy proto package is being used.
const _ = proto.ProtoPackageIsVersion4

// Replace directive replaces literal files with other files.
// Replacing content can either be inline or in the same patch-tree.
type Replace struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// required - replaced file
	File string `protobuf:"bytes,1,opt,name=file,proto3" json:"file,omitempty"`
	// Types that are assignable to Replacing:
	//	*Replace_WithFile
	//	*Replace_WithInline
	Replacing isReplace_Replacing `protobuf_oneof:"replacing"`
}

func (x *Replace) Reset() {
	*x = Replace{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cfg_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Replace) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Replace) ProtoMessage() {}

func (x *Replace) ProtoReflect() protoreflect.Message {
	mi := &file_cfg_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Replace.ProtoReflect.Descriptor instead.
func (*Replace) Descriptor() ([]byte, []int) {
	return file_cfg_proto_rawDescGZIP(), []int{0}
}

func (x *Replace) GetFile() string {
	if x != nil {
		return x.File
	}
	return ""
}

func (m *Replace) GetReplacing() isReplace_Replacing {
	if m != nil {
		return m.Replacing
	}
	return nil
}

func (x *Replace) GetWithFile() string {
	if x, ok := x.GetReplacing().(*Replace_WithFile); ok {
		return x.WithFile
	}
	return ""
}

func (x *Replace) GetWithInline() string {
	if x, ok := x.GetReplacing().(*Replace_WithInline); ok {
		return x.WithInline
	}
	return ""
}

type isReplace_Replacing interface {
	isReplace_Replacing()
}

type Replace_WithFile struct {
	// replace with in-tree file
	WithFile string `protobuf:"bytes,2,opt,name=with_file,json=withFile,proto3,oneof"`
}

type Replace_WithInline struct {
	// replace with inline content
	WithInline string `protobuf:"bytes,3,opt,name=with_inline,json=withInline,proto3,oneof"`
}

func (*Replace_WithFile) isReplace_Replacing() {}

func (*Replace_WithInline) isReplace_Replacing() {}

type Cfg struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Replace []*Replace `protobuf:"bytes,1,rep,name=replace,proto3" json:"replace,omitempty"`
}

func (x *Cfg) Reset() {
	*x = Cfg{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cfg_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Cfg) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Cfg) ProtoMessage() {}

func (x *Cfg) ProtoReflect() protoreflect.Message {
	mi := &file_cfg_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Cfg.ProtoReflect.Descriptor instead.
func (*Cfg) Descriptor() ([]byte, []int) {
	return file_cfg_proto_rawDescGZIP(), []int{1}
}

func (x *Cfg) GetReplace() []*Replace {
	if x != nil {
		return x.Replace
	}
	return nil
}

var File_cfg_proto protoreflect.FileDescriptor

var file_cfg_proto_rawDesc = []byte{
	0x0a, 0x09, 0x63, 0x66, 0x67, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x08, 0x73, 0x72, 0x70,
	0x6d, 0x70, 0x72, 0x6f, 0x63, 0x22, 0x6c, 0x0a, 0x07, 0x52, 0x65, 0x70, 0x6c, 0x61, 0x63, 0x65,
	0x12, 0x12, 0x0a, 0x04, 0x66, 0x69, 0x6c, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04,
	0x66, 0x69, 0x6c, 0x65, 0x12, 0x1d, 0x0a, 0x09, 0x77, 0x69, 0x74, 0x68, 0x5f, 0x66, 0x69, 0x6c,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x08, 0x77, 0x69, 0x74, 0x68, 0x46,
	0x69, 0x6c, 0x65, 0x12, 0x21, 0x0a, 0x0b, 0x77, 0x69, 0x74, 0x68, 0x5f, 0x69, 0x6e, 0x6c, 0x69,
	0x6e, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x0a, 0x77, 0x69, 0x74, 0x68,
	0x49, 0x6e, 0x6c, 0x69, 0x6e, 0x65, 0x42, 0x0b, 0x0a, 0x09, 0x72, 0x65, 0x70, 0x6c, 0x61, 0x63,
	0x69, 0x6e, 0x67, 0x22, 0x32, 0x0a, 0x03, 0x43, 0x66, 0x67, 0x12, 0x2b, 0x0a, 0x07, 0x72, 0x65,
	0x70, 0x6c, 0x61, 0x63, 0x65, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x73, 0x72,
	0x70, 0x6d, 0x70, 0x72, 0x6f, 0x63, 0x2e, 0x52, 0x65, 0x70, 0x6c, 0x61, 0x63, 0x65, 0x52, 0x07,
	0x72, 0x65, 0x70, 0x6c, 0x61, 0x63, 0x65, 0x42, 0x28, 0x5a, 0x26, 0x67, 0x69, 0x74, 0x68, 0x75,
	0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x6d, 0x73, 0x74, 0x67, 0x2f, 0x73, 0x72, 0x70, 0x6d, 0x70,
	0x72, 0x6f, 0x63, 0x2f, 0x70, 0x62, 0x3b, 0x73, 0x72, 0x70, 0x6d, 0x70, 0x72, 0x6f, 0x63, 0x70,
	0x62, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_cfg_proto_rawDescOnce sync.Once
	file_cfg_proto_rawDescData = file_cfg_proto_rawDesc
)

func file_cfg_proto_rawDescGZIP() []byte {
	file_cfg_proto_rawDescOnce.Do(func() {
		file_cfg_proto_rawDescData = protoimpl.X.CompressGZIP(file_cfg_proto_rawDescData)
	})
	return file_cfg_proto_rawDescData
}

var file_cfg_proto_msgTypes = make([]protoimpl.MessageInfo, 2)
var file_cfg_proto_goTypes = []interface{}{
	(*Replace)(nil), // 0: srpmproc.Replace
	(*Cfg)(nil),     // 1: srpmproc.Cfg
}
var file_cfg_proto_depIdxs = []int32{
	0, // 0: srpmproc.Cfg.replace:type_name -> srpmproc.Replace
	1, // [1:1] is the sub-list for method output_type
	1, // [1:1] is the sub-list for method input_type
	1, // [1:1] is the sub-list for extension type_name
	1, // [1:1] is the sub-list for extension extendee
	0, // [0:1] is the sub-list for field type_name
}

func init() { file_cfg_proto_init() }
func file_cfg_proto_init() {
	if File_cfg_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_cfg_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Replace); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cfg_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Cfg); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_cfg_proto_msgTypes[0].OneofWrappers = []interface{}{
		(*Replace_WithFile)(nil),
		(*Replace_WithInline)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_cfg_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   2,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_cfg_proto_goTypes,
		DependencyIndexes: file_cfg_proto_depIdxs,
		MessageInfos:      file_cfg_proto_msgTypes,
	}.Build()
	File_cfg_proto = out.File
	file_cfg_proto_rawDesc = nil
	file_cfg_proto_goTypes = nil
	file_cfg_proto_depIdxs = nil
}
